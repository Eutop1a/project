# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /api/v1/admin/add-admin:
        post:
            tags:
                - Admin
            description: 管理员管理
            operationId: Admin_AddAdmin
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/project.v1.admin.AddAdminReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/project.v1.common.CommonResp'
    /api/v1/admin/batch-remove-admin:
        post:
            tags:
                - Admin
            description: 批量撤销管理员
            operationId: Admin_BatchRemoveAdmin
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/project.v1.admin.BatchRemoveAdminReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/project.v1.common.CommonResp'
    /api/v1/admin/remove-admin:
        post:
            tags:
                - Admin
            description: 撤销单个管理员
            operationId: Admin_RemoveAdmin
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/project.v1.admin.RemoveAdminReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/project.v1.common.CommonResp'
    /api/v1/admin/user/{userId}:
        delete:
            tags:
                - Admin
            operationId: Admin_DeleteUser
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/project.v1.common.CommonResp'
    /api/v1/admin/users:
        get:
            tags:
                - Admin
            description: 用户管理
            operationId: Admin_GetUserList
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/project.v1.admin.GetUserListResp'
    /api/v1/problem:
        post:
            tags:
                - Problem
            description: 题目管理
            operationId: Problem_CreateProblem
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/project.v1.problem.CreateProblemReq'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
    /api/v1/problem/{id}:
        put:
            tags:
                - Problem
            operationId: Problem_UpdateProblem
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/project.v1.problem.UpdateProblemReq'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
        delete:
            tags:
                - Problem
            operationId: Problem_DeleteProblem
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
    /api/v1/problems:
        get:
            tags:
                - Problem
            operationId: Problem_GetProblemList
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/project.v1.problem.GetProblemListResp'
    /api/v1/user/login:
        post:
            tags:
                - User
            operationId: User_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/project.v1.user.LoginReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/project.v1.user.LoginResp'
    /api/v1/user/register:
        post:
            tags:
                - User
            operationId: User_Register
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/project.v1.user.RegisterReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/project.v1.user.RegisterResp'
    /api/v1/user/{userId}/logout:
        post:
            tags:
                - User
            operationId: User_Logout
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/project.v1.user.LogoutReq'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
components:
    schemas:
        project.v1.admin.AddAdminReq:
            type: object
            properties:
                userId:
                    type: string
        project.v1.admin.BatchRemoveAdminReq:
            type: object
            properties:
                userIdList:
                    type: array
                    items:
                        type: string
        project.v1.admin.GetUserListResp:
            type: object
            properties:
                commonResp:
                    $ref: '#/components/schemas/project.v1.common.CommonResp'
                users:
                    type: array
                    items:
                        $ref: '#/components/schemas/project.v1.user.UserInfo'
                total:
                    type: integer
                    format: int32
        project.v1.admin.RemoveAdminReq:
            type: object
            properties:
                userId:
                    type: string
        project.v1.common.CommonResp:
            type: object
            properties:
                statusCode:
                    type: integer
                    format: int32
                msg:
                    type: string
                metadata:
                    type: object
                    additionalProperties:
                        type: string
            description: common.proto
        project.v1.problem.CreateProblemReq:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                difficulty:
                    type: integer
                    format: int32
                testCases:
                    type: string
        project.v1.problem.GetProblemListResp:
            type: object
            properties:
                problems:
                    type: array
                    items:
                        $ref: '#/components/schemas/project.v1.problem.ProblemInfo'
                total:
                    type: integer
                    format: int32
        project.v1.problem.ProblemInfo:
            type: object
            properties:
                id:
                    type: string
                title:
                    type: string
                description:
                    type: string
                difficulty:
                    type: integer
                    format: int32
                createTime:
                    type: string
                updateTime:
                    type: string
        project.v1.problem.UpdateProblemReq:
            type: object
            properties:
                id:
                    type: string
                title:
                    type: string
                description:
                    type: string
                difficulty:
                    type: integer
                    format: int32
                testCases:
                    type: string
        project.v1.user.LoginReq:
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
        project.v1.user.LoginResp:
            type: object
            properties:
                commonResp:
                    $ref: '#/components/schemas/project.v1.common.CommonResp'
                accessToken:
                    type: string
        project.v1.user.LogoutReq:
            type: object
            properties:
                userId:
                    type: string
        project.v1.user.RegisterReq:
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
                email:
                    type: string
                verifyCode:
                    type: string
        project.v1.user.RegisterResp:
            type: object
            properties:
                commonResp:
                    $ref: '#/components/schemas/project.v1.common.CommonResp'
                accessToken:
                    type: string
        project.v1.user.UserInfo:
            type: object
            properties:
                userId:
                    type: string
                username:
                    type: string
                email:
                    type: string
                isAdmin:
                    type: boolean
                createTime:
                    type: string
                updateTime:
                    type: string
tags:
    - name: Admin
    - name: Problem
    - name: User
