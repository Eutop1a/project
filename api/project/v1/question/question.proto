syntax = "proto3";

package project.v1.question;

import "google/api/annotations.proto";
import "project/v1/common/common.proto";

option go_package = "helloworld/api/project/v1/question;questionv1";
option java_multiple_files = true;
option java_package = "dev.kratos.api.question.v1";
option java_outer_classname = "QuestionProtoV1";

service Question {
  // 创建选择题
  rpc CreateQuestionChoice(QuestionChoiceInfo) returns(common.CommonResp) {
    option (google.api.http) = {
      post: "/api/v1/question/create/choice"
      body: "*"
    };
  }
  // 创建填空题
  rpc CreateQuestionFill(QuestionFillInfo) returns(common.CommonResp) {
    option (google.api.http) = {
      post: "/api/v1/question/create/fill"
      body: "*"
    };
  }
  // 创建判断题
  rpc CreateQuestionJudge(QuestionJudgeInfo) returns (common.CommonResp) {
    option (google.api.http) = {
      post: "/api/v1/question/create/judge"
      body: "*"
    };
  }
  // 创建简答题/大题
  rpc CreateQuestionEssay(QuestionEssayInfo) returns (common.CommonResp) {
    option (google.api.http) = {
      post: "/api/v1/question/create/essay"
      body: "*"
    };
  }
  // 删除题目
  rpc DeleteQuestion(DeleteQuestionReq) returns (common.CommonResp) {
    option (google.api.http) = {
      delete: "/api/v1/question/delete/{id}"
    };
  }
  // 更新选择题
  rpc UpdateQuestionChoice(QuestionChoiceInfo) returns(common.CommonResp) {
    option (google.api.http) = {
      put: "/api/v1/question/update/choice/{id}"
      body: "*"
    };
  }
  // 更新填空题
  rpc UpdateQuestionFill(QuestionFillInfo) returns(common.CommonResp) {
    option (google.api.http) = {
      put: "/api/v1/question/update/fill/{id}"
      body: "*"
    };
  }
  // 更新判断题
  rpc UpdateQuestionJudge(QuestionJudgeInfo) returns (common.CommonResp) {
    option (google.api.http) = {
      put: "/api/v1/question/update/judge/{id}"
      body: "*"
    };
  }
  // 更新简答题/大题
  rpc UpdateQuestionEssay(QuestionEssayInfo) returns (common.CommonResp) {
    option (google.api.http) = {
      put: "/api/v1/question/update/essay/{id}"
      body: "*"
    };
  }
  // 获取题目列表
  rpc GetQuestionList(GetQuestionListReq) returns (GetQuestionListResp) {
    option (google.api.http) = {
      get: "/api/v1/question/list"
    };
  }
}

// 题目基础信息
message QuestionBaseInfo {
  string type = 1;        // 题目类型
  string content = 2;     // 题目内容
  string image_url = 3;   // 题目图片
  float difficulty = 4;   // 题目难度
  string knowledge = 5;   // 题目知识点
}

// 选择题信息
message QuestionChoiceInfo {
  string id = 1;
  QuestionBaseInfo base_info = 2;
  string option_a = 3;
  string option_b = 4;
  string option_c = 5;
  string option_d = 6;
  string answer = 7;
}

// 填空题信息
message QuestionFillInfo {
  string id = 1;
  QuestionBaseInfo base_info = 2;
  string answer = 3;
}

// 判断题信息
message QuestionJudgeInfo {
  string id = 1;
  QuestionBaseInfo base_info = 2;
  bool answer = 3;
}

// 简答题/大题信息
message QuestionEssayInfo {
  string id = 1;
  QuestionBaseInfo base_info = 2;
  string reference = 3;
}

// 删除题目请求
message DeleteQuestionReq {
  string id = 1;
}

// 获取题目列表请求
message GetQuestionListReq {
  int32 page = 1;
  int32 page_size = 2;
}

// 获取题目列表响应
message GetQuestionListResp {
  common.CommonResp common_resp   = 1;
  repeated QuestionInfo questions = 2;
  int32 total = 3;
}

// 题目信息
message QuestionInfo {
  oneof question {
    QuestionChoiceInfo choice = 1;
    QuestionFillInfo fill = 2;
    QuestionJudgeInfo judge = 3;
    QuestionEssayInfo essay = 4;
  }
}